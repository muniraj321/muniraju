CREATE TABLE client_master
(client_no varchar(6) primary key check(Client_no LIKE 'c%'),
name varchar(25),
address1 varchar(30),
address2 varchar(30),
city varchar(11),
state varchar(11),
pincode number(6),
bal_due number(10,2));


CREATE TABLE product_master
(product_no varchar(6) primary key check(Product_no LIKE 'P%'),
description varchar(11) not null,
profit_percentage number(1,2) not null,
unit_measure varchar(10) not null,
qty_on_hand number(8) not null,
reorder_level number(8) not null,
sell_price number(8,2) not null check(sell_price !=0),
cost_price number(8,3) not null check(cost_price !=0));


CREATE TABLE salesman_master
(salesman_no varchar(6) primary key check(salesman_no LIKE 's%'),
salesman_name varchar(20) not null,
address1 varchar(30) not null,
address2 varchar(30),
city varchar(20),
pincode varchar(6),
state varchar(20),
sal_amt number(8,2) not null check(sal_amt !=0),
tgt_to_get number(8,2) not null check(tgt_to_get !=0),
ytd_sales number(8,2) not null,
remark varchar(60));


CREATE Table sales_order
(s_order_no varchar(6) primary key check(s_order_no LIKE 'o%'),
s_order_date date,
client_no varchar(6) references client_master(client_no),
dely_addr varchar(21),
salesman_no references salesman_master(salesman_no),
dely_type char(1) default 'f',
billed_yn char(1),
dely_date date,
check(dely_date > s_ORder_date),
order_status varchar(10),
check(oeder_status IN('In Process','Fulfilled','BackORder','Cancelled')));

CREATE TABLE sales_order_detail
(s_order_no REFERENCES sales_order(s_order_no),
product_no REFERENCES product_master(product_no),
qty_ordered number(8),
qty_disp number(8),
product_rate number(10,2),
PRIMARY KEY(s_order_no,product_no));

CREATE TABLE challan_header
(challan_no varchar(6) primary key check(Challan_no LIKE 'ch%'),
s_order_no REFERENCES sales_order(s_order_no),
challan_date date not null,
billed_YN char(1) Default 'N');

INSERT into Client_Master(Client_no,Name,City,Pincode,State,Baldue)values
( ‘&Client_no’,’&Name’,’&City’,’&Pincode’,’&State’,’&Baldue’);
INSERT into Client_Master(Client_no,Name,address,City,State,pincode,Bal_due)values
('C001','MUNI','AMUDHAGONDAPALLI','HOSUR','TAMILNADU',635105,1000);

INSERT into Product_Master(Product_no,Description,Profit_Percent, UOM, Qtyonhand,
Reorderlvl, Sellprice,Costprice)values(‘&Product_no’,’& Description’,’&
Profit_Percent’,’&UOM’,’& Qtyonhand’,’& Reorderlvl’,’&Sellprice’,’ Costprice’)

INSERT into Product_Master(Product_no,Description,Profit_Percentage, Unit_measure, 
Qty_On_Hand,ReORder_level, Sell_price,Cost_price)values('A001','jdhys',20,'piece',20,423,3944,21321);

INSERT INTO product_master VALUES ('P00001', '1.44floppies', '5', 'piece', '100', '20', '525', '500');



INSERT INTO salesman_master
(salesman_no, Salesman_name, address1, address2, city, pincode,
state,sal_amt,tgt_to_get,ytd_sales,remark)
VALUES('&salesman_no','&Saleman_name','&address1','&address2','&city','&pincode','&sta
te','&sal_amt','&tgt_to_get','&ytd_sales','&remark');

INSERT INTO sales_ORder
(s_ORder_no,s_ORder_date, client_no,Dely_addr, salesman_no,dely_type,
billed_yn,dely_date,ORder_status)]
VALUES('&s_ORder_no','&S_ORDER_DATE','&client_no','&Dely_addr','&salesman_no','
&dely_type','&billed_yn','&dely_date','&ORder_status');

INSERT INTO sales_ORder_detail
(S_ORder_no,product_no,qty_ORdered,qty_disp,product_rate)
VALUES
('&S_ORder_no','&product_no','&qty_ORdered','&qty_disp','&product_rate');

INSERT INTO challan_header
(challan_no,s_ORder_no,challan_date,billed_yn)
VALUES ('&challan_no','&s_ORder_no','&challan_date','&billed_yn');



SELECT name FROM client_master;

SELECT * FROM client_master;

SELECT name,city FROM client_master;

SELECT description FROM product_master;

SELECT name FROM client_master WHERE name LIKE '_a%';

SELECT city FROM client_master WHERE name LIKE '_a%';

SELECT name,city FROM client_master WHERE city IN ('Bombay','Delhi','Madras');

SELECT * FROM client_master WHERE city='Bombay';

SELECT client_no, name,bal_due FROM client_master WHERE bal_due>10000;

SELECT * FROM sales_Order WHERE S_ORder_date LIKE '%JAN%';

SELECT * FROM sales_ORder WHERE client_no='C00001' OR client_no='C00002';

SELECT product_no, description FROM product_master WHERE description='1.44 Drive' OR
description='1.22 Drive';

SELECT description,sell_price, (sell_price*15)as new FROM product_master WHERE
sell_price>1500;

SELECT description,sell_price, (sell_price*15)as new_price FROM product_master
WHERE sell_price>1500;

SELECT description,sell_price FROM product_master WHERE sell_price<1500;

SELECT description FROM product_master ORder by description asc;

SELECT description,sqrt(cost_price)as sqrt_costprice FROM product_master;

SELECT cost_price/(sell_price-100) as divide_price FROM product_master WHERE
description='540 HDD';

SELECT name, city, state FROM client_master WHERE state!='Maharashtra';

SELECT product_no,description, sell_price FROM product_master WHERE description
LIKE 'M%';

SELECT s_ORder_no FROM sales_ORder WHERE dely_date LIKE '%MAR%' and
ORder_status = 'Cancelled';

update sales_order set s_order_date='19-JAN-96' where client_no='C00001';

update product_master set sell_price =1150 where description='1.44 Drive';

delete from sales_order_detail where S_order_no='O19001';
delete from challan_header where S_order_no='O19001';
delete from sales_order where S_order_no='O19001';

update client_master set city='Bombay' where client_no='C00006';

update sales_order set dely_date='16-AUG-96' where S_order_no='O10008';

select count(S_order_no) from Sales_order;

select avg(cost_price) from product_master;

select min(cost_price) from product_master;

select min(cost_price) as min_price, max(cost_price) as max_price from
product_master;

select count(Product_no) from product_master where cost_price>=1500;

select client_master.name, (sales_order.s_order_no),sales_order.s_order_date from
client_master,sales_order;




select d.product_no,p.description from product_master p,client_master c,
sales_order s,sales_order_detail d where p.product_no=d.product_no and
c.client_no=s.client_no and s.s_order_no=d.s_order_no and c.name='IvanBayross';

select d.product_no,p.description,sum(d.qty_ordered)
from sales_order_details d,sales_order s,product_master p
where p.product_no=d.product_no and s.s_order_no=d.s_order_no and to_char(dely_date,'monyy')=to_char(sysdate,'mon-yy')
group by d.product_no,p.description;

select distinct p.product_no,p.description from product_master
p,sales_order_detail d where p.product_no=d.product_no;

select c.name,s.client_no from client_master c,product_master p, sales_order
s,sales_order_detail d where c.client_no=s.client_no and p.product_no=d.product_no and
s.s_order_no=d.s_order_no and p.description='CD Drive';

select d.product_no,d.s_order_no from sales_order_detail d, sales_order
s,product_master p where s.s_order_no=d.s_order_no and p.product_no=d.product_no
and d.qty_ordered<15 and p.description='1.44 Floppy';

select d.product_no,p.description,sum(qty_ordered)"Qty Ordered" from sales_order_detail d,sales_order
s,product_master p,client_master c where s.s_order_no=d.s_order_no and p.product_no=d.product_no and
c.client_no=s.client_no and (c.name='IvanBayross' or c.name='VandanaSaitwal') group by
d.product_no,p.description;

select s.client_no,d.product_no,p.description ,sum(qty_ordered)"Qty_ordered" from
sales_order s,sales_order_detail d,product_master p,client_master c where
s.s_order_no=d.s_order_no and d.product_no=p.product_no and s.client_no=c.client_no
group by s.client_no,d.product_no,p.description having s.client_no='C00001' or
s.client_no='C00002';



select product_no,description from product_master where product_no not in(select
product_no from sales_order_detail);

select name,address1,address2,city,pincode from client_master where client_no in (select
client_no from sales_order where s_order_no='O19002');

select client_no,name from client_master where client_no in(select client_no from
sales_order where to_char(s order_date,'mon,yy')<'may,96');

select client_no,name from client_master where client_no in (select client_no from
sales_order where s_order_no in (select s_order_no from sales_order_detail where
product_no in(select product_no from product_master where description='1.44 Drive')));

select name from client_master where client_no in(select client_no from sales_order
where s_order_no in (select s_order_no from sales_order_detail where
(qty_ordered*product_rate)>=10000));




create table inventory (pno number, pname varchar (20), rate number) ;
declare
ratel inventory.rate%type;
begin
insert into inventory values (1,'al', 100) :
insert into inventory values (2, 'b', 200) ;
insert into inventory values (3,'c',300) ;
update inventory set rate=rate+(rate*0.2) ;
commit;
end;
/
select * from inventory;
end;
alter table inventory add (no_of_items number) ;
update inventory set no_of_items =10 where pno=1;
update inventory set no_of_items=35 where pno=2;
update inventory set no_of_items =05 where pno=3;
select * from inventory;



create table inventory(Pro_no varchar(6) check(pro_no like 'P%'),Pro_Name
varchar(25),rate number);
begin
insert into inventory(Pro_no,Pro_name,Rate)values('&pro_no','&pro_name','&rate');
end;
/
declare
v_rate inventory.rate%type;
begin
update inventory
set rate=rate+(rate*0.2);
commit;
end;
/
select * from inventory;
alter table inventory add(No_of_item number);
update inventory set no_of_ITEM=10 where pro_no='P00001';
update inventory set no_of_ITEM=5 where pro_no='P00002';
update inventory set no_of_ITEM=9 where pro_no='P00003';
commit;
select * from inventory;



create table student(SRN varchar(10) check(srn like 'R18CA%'),S_name
varchar(20),marks number,div varchar(5));

Begin
insert into student1 (srn,s_name, marks, div) values (1,'A',80,'pass');
commit;
insert into student1 (srn, s_name, marks, div) values (2,'b',20,'fail');
commit;
insert into student1 (srn, s_name, marks, div) values (3,'C',70,'pass');
commit;
insert into student1 (srn, S_name, marks, div) values (4,'d',40,"fail");
commit;
--insert into student (srn, s_name, marks, div) values ('&srn' , '&s_name' , '&marks' , '&div');
--commit;
End;
/

DECLARE
 v_srn student.srn%Type;
 v_s_name student.s_name%Type;
 v_marks student.marks%Type;
 v_div student.div%Type;
 CURSOR Student_Passcur IS Select * From student Where div='Pass'; 
CURSOR Student_Failcur IS Select * From student Where div='Fail';
BEGIN
 If NOT Student_Passcur%ISOPEN THEN
 OPEN Student_Passcur;
 END IF;
DBMS_OUTPUT.PUT_LINE('Passed Students');
 LOOP
 FETCH Student_Passcur
 INTO v_srn,v_s_name,v_marks,v_div;
 Exit When NOT Student_Passcur%FOUND;
 DBMS_OUTPUT.PUT_LINE(v_srn||' '||v_s_name||' '||v_marks||' '||v_div);
 END LOOP;
If NOT Student_Failcur%ISOPEN THEN
 OPEN Student_Failcur;
 END IF;
DBMS_OUTPUT.PUT_LINE('Failed Students');
LOOP
 FETCH Student_Failcur
 INTO v_srn,v_s_name,v_marks,v_div;
 Exit When NOT Student_Failcur%FOUND;
 DBMS_OUTPUT.PUT_LINE(v_srn||' '||v_s_name||' '||v_marks||' '||v_div);
 END LOOP;
 END;
/



DECLARE
invalid_commission EXCEPTION;
no_commission EXCEPTION;
v_comm emp.Comm%TYPE;
BEGIN
SELECT comm INTO v_comm FROM emp
WHERE empno=&emp_id;
IF v_comm<0 THEN
RAISE invalid_commission;
ELSIF v_comm IS NULL THEN
RAISE no_commission;
ELSE
DBMS_OUTPUT.PUT_LINE(TO_CHAR(v_comm));
END IF;
EXCEPTION
WHEN invalid_commission THEN
DBMS_OUTPUT.PUT_LINE('commission is negative.');
WHEN no_commission THEN
DBMS_OUTPUT.PUT_LINE('no commission');
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('no such id');
END;
/



















1)select name from client_master;

2)
seclect * from client_master;

3)select name,city,state from client_master;

4)select description  from product_master;

5)select name from client_master where name like'_a%';

6)SELECT name,city FROM client_master WHERE name LIKE '_a%';


7) Find the list of all clients who stay in bombay or city delhi or city madras.

--SELECT name,city FROM client_master WHERE city IN ('Bombay','Delhi','Madras');
SELECT name,city FROM client_master WHERE city='Bombay' or city='Delhi' or city='Madras');


8) List all the clients who are located in 'Bombay'.

--SELECT * FROM client_master WHERE city='Bombay';
SELECT name from client_master WHERE city='Bombay';

9) Print the list of clients whose bal_due are greater than value 10000

--SELECT client_no, name,bal_due FROM client_master WHERE bal_due>10000;
SELECT name FROM client_master WHERE bal_due>10000;

10) Print the information from sales_order table of order placed in month of january.

--SELECT * FROM sales_Order WHERE S_ORder_date LIKE '%JAN%';
SELECT * FROM sales_Order WHERE S_ORder_date='%JAN%';

11)SELECT * FROM sales_Order WHERE client_no='C00001' OR client_no='C00002';

12)--SELECT product_no, description FROM product_master WHERE description='1.44 Drive' OR
description='1.22 Drive';
SELECT product_no, description FROM product_master WHERE description='1.44 Drive' OR '1.22 Drive';

14)--SELECT description,sell_price, (sell_price*15)as new FROM product_master WHERE
sell_price>1500;
SELECT product,description,sell_price, sell_price*15 from product_master
WHERE sell_price>1500;

15)--SELECT description,sell_price, (sell_price*15)as new_price FROM product_master
WHERE sell_price>1500;
SELECT product,description,sell_price, sell_price*15 as new_sell_price FROM product_master
WHERE sell_price>1500;


16)--SELECT description,sell_price FROM product_master WHERE sell_price<1500;
SELECT product,description FROM product_master WHERE cost_price<1500;

17)--SELECT description FROM product_master ORder by description asc;
SELECT product,description FROM product_master Order by product asc;
SELECT product,description FROM product_master Order by description asc;

18)SELECT product,description,sqrt(cost_price)as sqrt_cost_price FROM product_master;
--SELECT description,sqrt(cost_price)as sqrt_costprice FROM product_master;

19)--SELECT cost_price/(sell_price-100) as divide_price FROM product_master WHERE
description='540 HDD';

20)SELECT name, city, state FROM client_master WHERE state!='Maharashtra';

21)SELECT product_no,description, sell_price FROM product_master WHERE description LIKE 'M%';

22) --SELECT s_Order_no FROM sales_Order WHERE dely_date LIKE '%MAR%' and ORder_status = 'Cancelled';
SELECT s_Order_no FROM sales_Order WHERE LIKE month='%MAR%' and ORder_status = 'Cancelled';





LISTING – IV : TABLE UPDATIONS
1)--update sales_order set s_order_date='19-JAN-96' where client_no='C00001';
update sales_order set s_order_date='24-JUL-1996' where client_no='C00001';

2)--update product_master set sell_price =1150 where description='1.44 Drive';
update product_master set sell_price =1150.00 where description='1.44 Drive';

3)
 --delete from sales_order_detail where S_order_no='O19001';
 --delete from challan_header where S_order_no='O19001';
 --delete from sales_order where S_order_no='O19001';

delete from sales_order_detail,challan_header,sales_order where S_order_no='O19001';

4)--DELETE FROM sales_order_detail,challan_header,sales_order WHERE DATE(date_history) < '2015-11-01'
delete from sales_order where dely_date<'10-jul-1996';

5)update client_master set city='Bombay' where client_no='C00006';

6) Change the delivery date of order no 'O10008' to 16-08-96
update sales_order set dely_date='16-AUG-96' where S_order_no='O10008';

7)--update bal_due where client_no='O10008' to 'C01000;
update client_master set bal_due=1000 where client_no='C00001';

8)update product_master set cost_price= 950 where description='1.22 floppy drive';



LISTING – V : SET FUNCTIONS AND CONCATENATION
1.select count(*) from Sales_order;
select count(S_order_no) from Sales_order;

2)select avg(cost_price) from product_master;

3)select min(cost_price) from product_master;

4)select min(cost_price) as min_price, max(cost_price) as max_price from
product_master;

5)select count(Product_no) from product_master where cost_price>=1500;

6)select*from product_master where qty_on_hand<recorder_lvl;

7)Print the information of client_master,product_master,sales_order table in the following
format for all the record.{cust_name}has placed order {order_no}on {s_order_date}.

--select client_master.name, (sales_order.s_order_no),sales_order.s_order_date from
client_master,sales_order;

--7. Print the information of client_master,product_master,sales_order table in the following
format for all the record.{cust_name}has placed order {product_no}on {s_order_date}.

select client_master.name|| "has placed order"|| product_master.product_no||
"on"|| sales_order.s_order_date from client_master,product_master,sales_order;





